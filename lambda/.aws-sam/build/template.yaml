AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'backend

  Sample SAM Template for backend

  '
Globals:
  Function:
    Timeout: 3
Resources:
  ToDoAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors: '''*'''
      Auth:
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: arn:aws:cognito-idp:us-east-1:381380966612:userpool/us-east-1_YoJyuXsXY
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId:
              Ref: ToDoAPI
            Path: /hello
            Method: GET
  GetNameFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetNameFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Policies: AmazonDynamoDBReadOnlyAccess
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DynamoDBTable
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId:
              Ref: ToDoAPI
            Path: /get-name
            Method: GET
  InsertTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: InsertTodoFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TodosTable
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId:
              Ref: ToDoAPI
            Path: /add-todo
            Method: POST
  UpdateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UpdateTodoFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TodosTable
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId:
              Ref: ToDoAPI
            Path: /update-todo/{id}
            Method: PUT
  DeleteTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: DeleteTodoFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TodosTable
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId:
              Ref: ToDoAPI
            Path: /delete-todo/{id}
            Method: DELETE
            Auth:
              Authorizer: MyCognitoAuthorizer
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  TodosTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
Outputs:
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - HelloWorldFunction
      - Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - HelloWorldFunctionRole
      - Arn
